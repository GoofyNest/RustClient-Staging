public sealed class ConstraintCollection : InternalDataCollectionBase // TypeDefIndex: 4175
{	// Fields
	private readonly DataTable _table; // 0x10
	private readonly ArrayList _list; // 0x18
	private int _defaultNameIndex; // 0x20
	private CollectionChangeEventHandler _onCollectionChanged; // 0x28
	private Constraint[] _delayLoadingConstraints; // 0x30
	private bool _fLoadForeignKeyConstraintsOnly; // 0x38

	// Properties
	protected override ArrayList List { get; }
	public Constraint Item { get; }
	internal DataTable Table { get; }
	public Constraint Item { get; }

	// Methods

	// RVA: 0x12295D0 Offset: 0x1227BD0 VA: 0x1812295D0
	internal void .ctor(DataTable table) { }

	// RVA: 0x49A880 Offset: 0x498E80 VA: 0x18049A880 Slot: 11
	protected override ArrayList get_List() { }

	// RVA: 0x1229790 Offset: 0x1227D90 VA: 0x181229790
	public Constraint get_Item(int index) { }

	// RVA: 0x4BC560 Offset: 0x4BAB60 VA: 0x1804BC560
	internal DataTable get_Table() { }

	// RVA: 0x1229680 Offset: 0x1227C80 VA: 0x181229680
	public Constraint get_Item(string name) { }

	// RVA: 0x1226EC0 Offset: 0x12254C0 VA: 0x181226EC0
	public void Add(Constraint constraint) { }

	// RVA: 0x1226F80 Offset: 0x1225580 VA: 0x181226F80
	internal void Add(Constraint constraint, bool addUniqueWhenAddingForeign) { }

	// RVA: 0x1226ED0 Offset: 0x12254D0 VA: 0x181226ED0
	public Constraint Add(string name, DataColumn[] columns, bool primaryKey) { }

	// RVA: 0x1226DC0 Offset: 0x12253C0 VA: 0x181226DC0
	private void AddUniqueConstraint(UniqueConstraint constraint) { }

	// RVA: 0x1226D30 Offset: 0x1225330 VA: 0x181226D30
	private void AddForeignKeyConstraint(ForeignKeyConstraint constraint) { }

	// RVA: 0x1227930 Offset: 0x1225F30 VA: 0x181227930
	private bool AutoGenerated(Constraint constraint) { }

	// RVA: 0x1227890 Offset: 0x1225E90 VA: 0x181227890
	private void ArrayAdd(Constraint constraint) { }

	// RVA: 0x12278D0 Offset: 0x1225ED0 VA: 0x1812278D0
	private void ArrayRemove(Constraint constraint) { }

	// RVA: 0x1227910 Offset: 0x1225F10 VA: 0x181227910
	internal string AssignName() { }

	// RVA: 0x1227A00 Offset: 0x1226000 VA: 0x181227A00
	private void BaseAdd(Constraint constraint) { }

	// RVA: 0x1227AF0 Offset: 0x12260F0 VA: 0x181227AF0
	private void BaseGroupSwitch(Constraint[] oldArray, int oldLength, Constraint[] newArray, int newLength) { }

	// RVA: 0x1227D40 Offset: 0x1226340 VA: 0x181227D40
	private void BaseRemove(Constraint constraint) { }

	// RVA: 0x12280C0 Offset: 0x12266C0 VA: 0x1812280C0
	internal bool CanRemove(Constraint constraint, bool fThrowException) { }

	// RVA: 0x12280F0 Offset: 0x12266F0 VA: 0x1812280F0
	public void Clear() { }

	// RVA: 0x12286A0 Offset: 0x1226CA0 VA: 0x1812286A0
	public bool Contains(string name) { }

	// RVA: 0x12286C0 Offset: 0x1226CC0 VA: 0x1812286C0
	internal bool Contains(string name, bool caseSensitive) { }

	// RVA: 0x1228830 Offset: 0x1226E30 VA: 0x181228830
	internal Constraint FindConstraint(Constraint constraint) { }

	// RVA: 0x1228BB0 Offset: 0x12271B0 VA: 0x181228BB0
	internal UniqueConstraint FindKeyConstraint(DataColumn[] columns) { }

	// RVA: 0x1228CF0 Offset: 0x12272F0 VA: 0x181228CF0
	internal UniqueConstraint FindKeyConstraint(DataColumn column) { }

	// RVA: 0x1228A50 Offset: 0x1227050 VA: 0x181228A50
	internal ForeignKeyConstraint FindForeignKeyConstraint(DataColumn[] parentColumns, DataColumn[] childColumns) { }

	// RVA: 0x12285F0 Offset: 0x1226BF0 VA: 0x1812285F0
	private static bool CompareArrays(DataColumn[] a1, DataColumn[] a2) { }

	// RVA: 0x1228E20 Offset: 0x1227420 VA: 0x181228E20
	internal int InternalIndexOf(string constraintName) { }

	// RVA: 0x1228FC0 Offset: 0x12275C0 VA: 0x181228FC0
	private string MakeName(int index) { }

	// RVA: 0xE68C20 Offset: 0xE67220 VA: 0x180E68C20
	private void OnCollectionChanged(CollectionChangeEventArgs ccevent) { }

	// RVA: 0x1229050 Offset: 0x1227650 VA: 0x181229050
	internal void RegisterName(string name) { }

	// RVA: 0x12292D0 Offset: 0x12278D0 VA: 0x1812292D0
	public void Remove(Constraint constraint) { }

	// RVA: 0x12294C0 Offset: 0x1227AC0 VA: 0x1812294C0
	internal void UnregisterName(string name) { }

}

